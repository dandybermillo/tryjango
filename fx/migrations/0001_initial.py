# Generated by Django 3.0.3 on 2020-09-24 05:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CodeGeneratorModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_id', models.IntegerField(default=0)),
                ('code', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='IdRepositoryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('counter', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MemberModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Mrs.', 'Mrs')], max_length=4)),
                ('firstname', models.CharField(max_length=50)),
                ('middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(max_length=50)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('telephone', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.TextField(blank=True, max_length=400, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('reserve', models.BooleanField(default=False)),
                ('member_id', models.CharField(default='2001/12/12', max_length=11, unique=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NoteModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.IntegerField(default=0)),
                ('note', models.TextField(blank=True, help_text='Enter note when necessary. Thank you', max_length=300, null=True)),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'LOAN'), (2, 'GROCERY'), (3, 'PAYMENT'), (7, 'TRADING')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PendingLoanModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_id', models.IntegerField(default=0)),
                ('cc_loan', models.FloatField(default=0)),
                ('saving', models.FloatField(default=0)),
                ('percent', models.FloatField(default=0)),
                ('source_type', models.CharField(blank=True, default='C', max_length=1)),
                ('source_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tmp_PasswordModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pwd', models.CharField(max_length=12)),
                ('member_id', models.IntegerField()),
                ('date_entry', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tmp_UsernameModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('code_counter', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WalletModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], max_length=1)),
                ('debit', models.FloatField(default=0, verbose_name='Amount to Cash Out')),
                ('credit', models.FloatField(default=0, verbose_name='Amount Cash In')),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'TRANSFER'), (2, 'GROCERY'), (5, 'LOAN'), (6, 'VENTURE')], default=0)),
                ('source_id', models.IntegerField(default=0)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='VentureWalletModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], max_length=1)),
                ('debit', models.FloatField(default=0, verbose_name='Amount to Cash Out')),
                ('credit', models.FloatField(default=0, verbose_name='Amount Cash In')),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'TRANSFER'), (2, 'GROCERY'), (5, 'LOAN'), (6, 'VENTURE')], default=0)),
                ('source_id', models.IntegerField(default=0)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='VentureModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], max_length=1)),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'TRANSFER'), (2, 'GROCERY'), (5, 'LOAN'), (7, 'TRADE')], default=2)),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('cc', models.FloatField(default=0)),
                ('percent', models.FloatField(default=95)),
                ('source_type', models.CharField(choices=[('W', 'WALLET ACCOUNT'), ('K', 'CASH'), ('S', 'SAVINGS ACCOUNT')], default='K', max_length=1)),
                ('customer_source_id', models.IntegerField(default=0)),
                ('seller_source_id', models.IntegerField(default=0)),
                ('customer_cc_id', models.IntegerField(default=0)),
                ('seller_cc_id', models.IntegerField(default=0)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('flag', models.PositiveIntegerField(choices=[(0, 'UNACCEPTED'), (1, 'ACCEPTED'), (2, 'BEING_EDITED'), (3, 'DONE_EDITING')], default=0)),
                ('note_id', models.IntegerField(default=0)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Trading_Customer', to='fx.MemberModel')),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Trading_Seller', to='fx.MemberModel')),
            ],
        ),
        migrations.CreateModel(
            name='VentureCcModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], default='D', max_length=1)),
                ('debit', models.FloatField(default=0, verbose_name='Amount to Cash Out')),
                ('credit', models.FloatField(default=0, verbose_name='Amount to Cash In')),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'TRANSFER'), (2, 'GROCERY'), (3, 'SAVING_INTEREST'), (4, 'EARNED'), (5, 'LOAN')], default=0)),
                ('source_id', models.IntegerField(default=0)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferenceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_transaction', models.PositiveIntegerField(default=5)),
                ('cash_transfer_nos_of_row', models.PositiveIntegerField(default=5)),
                ('search_member', models.PositiveIntegerField(default=5)),
                ('search_receiver', models.PositiveIntegerField(default=5)),
                ('transfer_receiver', models.PositiveIntegerField(default=5)),
                ('transfer_history', models.PositiveIntegerField(default=5)),
                ('claim_transfer', models.PositiveIntegerField(default=5)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransferModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, default='W', max_length=1)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('code', models.PositiveIntegerField(default=0)),
                ('purpose', models.CharField(blank=True, max_length=100)),
                ('source_type', models.CharField(choices=[('W', 'WALLET'), ('C', 'CC'), ('S', 'SAVING')], default='W', max_length=1)),
                ('source_id', models.IntegerField(default=0)),
                ('date_accounted', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('flag', models.PositiveIntegerField(choices=[(0, 'UNACCEPTED'), (1, 'ACCEPTED'), (2, 'BEING_EDITED'), (3, 'DONE_EDITING')], default=0)),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Cash_receiver', to='fx.MemberModel')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Cash_sender', to='fx.MemberModel')),
            ],
        ),
        migrations.CreateModel(
            name='TradingModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], max_length=1)),
                ('role_type', models.CharField(default='S', max_length=1)),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'TRANSFER'), (2, 'GROCERY'), (5, 'LOAN'), (7, 'TRADE')], default=7)),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('customer_source_id', models.IntegerField(default=0)),
                ('seller_source_id', models.IntegerField(default=0)),
                ('cc', models.FloatField(default=0)),
                ('percent', models.FloatField(default=95)),
                ('source_type', models.CharField(choices=[('W', 'WALLET ACCOUNT'), ('K', 'CASH'), ('S', 'SAVINGS ACCOUNT')], default='K', max_length=1)),
                ('source_id', models.IntegerField(default=0)),
                ('cc_id', models.IntegerField(default=0)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('flag', models.PositiveIntegerField(choices=[(0, 'UNACCEPTED'), (1, 'ACCEPTED'), (2, 'BEING_EDITED'), (3, 'DONE_EDITING')], default=0)),
                ('note_id', models.IntegerField(default=0)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Customer', to='fx.MemberModel')),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Seller', to='fx.MemberModel')),
            ],
        ),
        migrations.CreateModel(
            name='SavingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], default='D', max_length=1)),
                ('debit', models.FloatField(default=0, verbose_name='Amount to Cash Out')),
                ('credit', models.FloatField(default=0, verbose_name='Amount to Cash In')),
                ('category', models.PositiveIntegerField(choices=[(1, 'TRANSFER'), (5, 'LOAN'), (6, 'PAYMENT')], default=0)),
                ('source_id', models.IntegerField(default=0)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PersonalLoanModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cc_loan', models.FloatField(default=0, verbose_name='Community Coin(CC)')),
                ('saving', models.FloatField(default=0, verbose_name='Saving(Deposit)')),
                ('percent', models.PositiveIntegerField(default=0)),
                ('source_type', models.CharField(blank=True, default='C', max_length=1)),
                ('source_id', models.IntegerField(default=0)),
                ('cc_id', models.IntegerField(default=0)),
                ('saving_id', models.IntegerField(default=0)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('note_id', models.IntegerField(default=0)),
                ('flag', models.PositiveIntegerField(choices=[(0, 'UNACCEPTED'), (1, 'ACCEPTED'), (2, 'BEING_EDITED'), (3, 'DONE_EDITING')], default=0)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], default='D', max_length=1)),
                ('debit', models.FloatField(default=0, verbose_name='Amount')),
                ('credit', models.FloatField(default=0, verbose_name='Amount to Cash In')),
                ('category', models.PositiveIntegerField(choices=[(5, 'LOAN'), (6, 'PAYMENT')], default=0)),
                ('source_id', models.IntegerField(default=0)),
                ('source_type', models.CharField(blank=True, default='C', max_length=1)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='NonCashTransferModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, default='W', max_length=1)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('code', models.PositiveIntegerField(default=0)),
                ('purpose', models.CharField(blank=True, max_length=100)),
                ('source_type', models.PositiveIntegerField(choices=[(1, 'WALLET'), (2, 'CC'), (3, 'SAVING')], default=1)),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Non_Cash_receiver', to='fx.MemberModel')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Non_Cash_sender', to='fx.MemberModel')),
            ],
        ),
        migrations.CreateModel(
            name='CcModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('date_entered', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('transaction_type', models.CharField(blank=True, choices=[('D', 'DEPOSIT'), ('W', 'WITHRAW')], default='D', max_length=1)),
                ('debit', models.FloatField(default=0, verbose_name='Amount to Cash Out')),
                ('credit', models.FloatField(default=0, verbose_name='Amount to Cash In')),
                ('category', models.PositiveIntegerField(choices=[(0, 'REGULAR TRANSACTION'), (1, 'TRANSFER'), (2, 'GROCERY'), (3, 'SAVING_INTEREST'), (4, 'EARNED'), (5, 'LOAN')], default=0)),
                ('source_id', models.IntegerField(default=0)),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fx.MemberModel')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
